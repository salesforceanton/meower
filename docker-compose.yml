version: '3.7'

services:
  nginx:
    build: ./docker/nginx
    ports:
      - 8080:80
    depends_on:
      - meow
      - query
      - pusher
    restart: always
  meow:
    build: 
      context: "."
      dockerfile: "./docker/meow_service/Dockerfile"
    command: meow-service
    depends_on:
      nats:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - ${MEOWER_PORT}
    env_file:
      - .env
  query:
    build: 
      context: "."
      dockerfile: "./docker/query_service/Dockerfile"
    command: query-service
    depends_on:
      nats:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - ${MEOWER_PORT}
    env_file:
      - .env
  pusher:
    build:
      context: "."
      dockerfile: "./docker/pusher_service/Dockerfile"
    command: pusher-service
    depends_on:
      nats:
        condition: service_started
    restart: always
    ports:
      - ${MEOWER_PORT}
    env_file:
      - .env
  postgres:
    build: ./docker/postgres
    restart: always
    environment:
      - POSTGRES_DB=${MEOWER_POSTGRES_NAME}
      - POSTGRES_PASSWORD=${MEOWER_POSTGRES_PASSWORD}
      - POSTGRES_USER=${MEOWER_POSTGRES_USERNAME}
    volumes:
      - postgres_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${MEOWER_POSTGRES_USERNAME} -d ${MEOWER_POSTGRES_NAME}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  nats:
    image: nats-streaming:latest
    restart: always
    ports:
      - ${MEOWER_NATS_PORT}
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    ports:
      - ${MEOWER_ELASTICSEARCH_PORT}
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 7000:8080
    depends_on:
      - postgres
  frontend: 
    build: ./frontend/meower
    volumes:
      - /app/node_modules
      - ./frontend/meower:/app
    ports: 
      - ${MEOWER_FRONTEND_PORT}:${MEOWER_FRONTEND_PORT}
    depends_on:
      - nginx
    restart: always
    
volumes:
  postgres_data:
  es_data: